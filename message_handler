import vk_api

from settings import *
from behavior import *

# обработчик сообщений типа 0
def simple(data, last_message_id):
    user_id = data['object']['user_id']
    last_message_id = behavior[last_message_id]['children'][0]
    return last_message_id

# обработчик сообщений типа 1
def choose(data, last_message_id):
    user_message = data['object']['body']
    user_id = data['object']['user_id']
    last_message = behavior[last_message_id]
    if user_message in last_message['expect']:
        child_id = last_message['expect'].index(user_message)
        last_message_id = last_message['children'][child_id]
    elif last_message_id != start_message_id:
        vk_api.send_message(user_id, token, error_message)
    return last_message_id

# обработчик сообщений типа 2
def save(data, last_message_id):
    user_message = data['object']['body']
    user_id = data['object']['user_id']
    last_message_id = behavior[last_message_id]['children'][0]
    return last_message_id

# отправка сообщения
def create_answer(data, token, last_message_id):
    user_id = data['object']['user_id']
    message = behavior[last_message_id]
    if 'expect' in message.keys():
        labels = message['expect']
    else:
        labels = []
    message = message['text']
    vk_api.send_message(user_id, token, message, labels)
